// SPDX-FileCopyrightText: 2025 Toshimitsu Kimura <lovesyao@gmail.com>
// SPDX-License-Identifier: LGPL-2.0-or-later
#include <iostream>
#include <boost/multiprecision/cpp_dec_float.hpp>

namespace mp = boost::multiprecision;


// サンプリングレート（48000Hz を想定）
const float sampleRate = 48000.0f;

// 表示用の上限ピッチ（Hz） 
const float maxDisplayPitch = 880.000f; // A6 の周波数

// 表示用の下限ピッチ（Hz） 
const float baseFrequency = 55.0f; // A1 の周波数 (基準音)

const size_t lagMin = ceil(sampleRate / maxDisplayPitch);
const size_t lagMax = floor(sampleRate / baseFrequency) + 1;


int main() {

//float Pitch = sampleRate / bestLag; // bestLag = lagMin..lagMax
// x = ((std::log2(pitch/baseFrequency) / std::log2(maxDisplayPitch / baseFrequency)) * 2.0f - 1.0f);

    std::cout << "// This file is automatically generated from gen_table.cpp" << std::endl;
    std::cout << "float lag_to_y[] = {" << std::endl;
    for (size_t lag = lagMin; lag < lagMax; lag++) {
        auto y = ((mp::log2((mp::cpp_dec_float_100)sampleRate / lag / baseFrequency) / mp::log2((mp::cpp_dec_float_100)maxDisplayPitch / baseFrequency)) * 2.0f - 1.0f);
        std::cout << y.str(0, std::ios_base::scientific) << ", " << std::endl;
//        std::cout << mp::log2((mp::cpp_dec_float_100)12.0).str(0, std::ios_base::scientific) << std::endl;
    }
    std::cout << "};" << std::endl;
}
